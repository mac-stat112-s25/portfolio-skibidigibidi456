---
title: "Mulivariate Viz"
---

Use this file for practice with the **mulivariate viz** in-class activity.  Refer to the class website for details.

```{r}

library(ggplot2)


```


```{r}


library(tidyverse)

# Import data
weather <- read.csv("https://mac-stat.github.io/data/weather_3_locations.csv") |> 
  mutate(date = as.Date(date))  




# What are the units of observation?


# How many data points do we have? 


# What type of variables do we have?


```
# Check out the first 6 rows 

```{r}

head(weather, 6) 


```
# What are the units of observation?

The units of observation are minimum temperature, maximum temperature and rainfall. The units for these are celcius and categorical yes or no.

We have 25 variables and 3109 observations.


```{r}

# Plot 1 (no facets & starting from a density plot of temp3pm)
ggplot(weather, aes(x = temp3pm)) + 
  geom_density()

```
# Plot 2 (no facets or densities)


```{r}

# Plot 2 (no facets or densities)
ggplot(weather, aes(x = temp3pm)) + 
  geom_bar()

```


# Plot 3 (facets)



```{r}


ggplot(weather, aes(x = temp3pm)) + 
  geom_density() +
  facet_wrap(~ location)


```
#Reflection
Temperatures tend to be highest, and most variable, in Uluru. There, they range from ~10 to ~45 with a typical temp around ~30 degrees.
Temperatures tend to be lowest in Hobart. There, they range from ~5 to ~45 with a typical temp around ~15 degrees.
Wollongong temps are in between and are the least variable from day to day.


SUBTLETIES: Defining fill or color by a variable

How we define the fill or color depends upon whether weâ€™re defining it by a named color or by some variable in our dataset. For example:

geom___(fill = "blue")
named colors are defined outside the aesthetics and put in quotes

geom___(aes(fill = variable)) or ggplot(___, aes(fill = variable))
colors/fills defined by a variable are defined inside the aesthetics


```{r}

# Don't worry about the syntax (we'll learn it soon)
woll <- weather |>
  filter(location == "Wollongong") |> 
  mutate(date = as.Date(date))  

```



```{r}

# How often does it raintoday?
# Fill your geometric layer with the color blue.
ggplot(woll, aes(x = raintoday)) +
  geom_bar( fill = "blue")

```
# If it does raintoday, what does this tell us about raintomorrow?
# Use your intuition first


```{r}

ggplot(woll, aes(x = raintoday)) +
   geom_bar( fill = "blue" )
  

```

# Now compare different approaches

# Default: stacked bars


```{r}


ggplot(woll, aes(x = raintoday, fill = raintomorrow)) + 
  geom_bar()

```

# Side-by-side bars



```{r}

ggplot(woll, aes(x = raintoday, fill = raintomorrow)) + 
  geom_bar(position = "dodge")

```


```{r}

# Proportional bars
# position = "fill" refers to filling the frame, nothing to do with the color-related fill
ggplot(woll, aes(x = raintoday, fill = raintomorrow)) + 
  geom_bar(position = "fill")



```

  


```{r}

# Side-by-side bars
ggplot(woll, aes(x = raintoday, fill = raintomorrow)) + 
  geom_bar(position = "dodge")



```

```{r}


# Proportional bars
# position = "fill" refers to filling the frame, nothing to do with the color-related fill
ggplot(woll, aes(x = raintoday, fill = raintomorrow)) + 
  geom_bar(position = "fill")

```


Construct a plot that illustrates how 3pm temperatures (temp3pm) vary by date in Wollongong. Represent each day on the plot and use a curve/line to help highlight the trends.

```{r}

# THINK: What variable goes on the y-axis?
# For the curve, try adding span = 0.5 to tweak the curvature
ggplot(woll, aes(y = temp3pm, x = date)) + 
  geom_point() + 
  geom_smooth(span = 0.5)

```


```{r}



# Plot temp3pm vs temp9am
# Change the code in order to indicate the location to which each data point corresponds
ggplot(weather, aes(y = temp3pm, x = temp9am)) + 
  geom_point()

```
```{r}


# Change the code in order to indicate the location to which each data point corresponds
# AND identify the days on which it rained / didn't raintoday
ggplot(weather, aes(y = temp3pm, x = temp9am)) + 
  geom_point()

```


```{r}

ggplot(weather, aes(y = temp3pm, x = temp9am)) + 
  geom_point() +
  facet_wrap(~ location)

```

```{r}

# Change the code in order to construct a line plot of temp3pm vs date for each separate location (no points!)
ggplot(weather, aes(y = temp3pm, x = date)) + 
  geom_line()
  facet_wrap(~ location)

```

```{r}

# Plot temp3pm vs temp9am
# Change the code in order to indicate the location to which each data point corresponds
ggplot(weather, aes(y = temp3pm, x = temp9am, color = location)) + 
  geom_point()


```
```{r}

# Change the code in order to indicate the location to which each data point corresponds
# AND identify the days on which it rained / didn't raintoday
ggplot(weather, aes(y = temp3pm, x = temp9am, color = location)) + 
  geom_point() +
  facet_wrap(~ raintoday)

```
```{r}

# Plot the relationship of raintomorrow & raintoday
# Change the code in order to indicate this relationship by location
ggplot(weather, aes(x = raintoday, fill = raintomorrow)) + 
  geom_bar(position = "fill")

```
#5.3 Exercises



```{r}

# Import and check out data
education <- read.csv("https://mac-stat.github.io/data/sat.csv")
head(education)


```

Construct a plot of how the average sat scores vary across states (HINT: you need to use the sat variable only).

```{r}

ggplot(education, aes(y = sat, x = State)) + 
  geom_point()


```
I belive there is a non normal shape because in order to explain SAT scores you must look at the factors that affect scores. Geography does not affect scores, but teacher salary and other things do affect scores.


```{r}

# Construct a plot of sat vs expend
# Include a "best fit linear regression model" (HINT: method = "lm")



ggplot(education, aes(y = sat, x = expend)) + 
  geom_point() + 
  geom_smooth(method = "lm")

```
# Construct a plot of sat vs salary
# Include a "best fit linear regression model" (HINT: method = "lm")

```{r}


ggplot(education, aes(y= sat, x= salary)) +
  geom_point() +
  geom_smooth(method = "lm")
```

Surprisingly, lower salaries and expenditures CORRELATE with higher SAT scores.

Construct one visualization of the relationship of sat with salary and expend. HINT: Start with just 2 variables and tweak that code to add the third variable. Try out a few things!

```{r}
ggplot(education, aes(y = sat, x= salary, color = expend)) +
  geom_point() +
  geom_smooth()



```

```{r}


ggplot(education, aes(y = sat, x = salary, color = cut(expend, 2))) + 
  geom_point() + 
  geom_smooth(se = FALSE, method = "lm")

```
```{r}
ggplot(education, aes(y = sat, x = salary, color = cut(expend, 3))) + 
  geom_point() + 
  geom_smooth(se = FALSE, method = "lm")

```

States with lower salaries and expenditures tend to have higher SAT scores.

```{r}

ggplot(education, aes(x = fracCat)) + 
  geom_bar()

```
```{r}

ggplot(education, aes(y = sat, x = fracCat)) +
geom_point()



```
```{r}
ggplot(education, aes(x = sat, fill = fracCat)) + 
  geom_density(alpha = 0.5)
```
```{r}

ggplot(education, aes(y = sat, x = expend, color = fracCat)) +   geom_point() + 
  geom_smooth(se = FALSE, method = "lm")



```
Controlling for the amount of people taking the SAT, scores increase with expenditure.

Part D: This is because states with low expenditures will likely have less students do the SAT, and so those who volunteer to do so will most likely be already quite intelligent and well abled to do so.


```{r}


# Remove the "State" column and use it to label the rows
# Then scale the variables
plot_data <- education |> 
  column_to_rownames("State") |> 
  data.matrix() |> 
  scale()

# Load the gplots package needed for heatmaps

# Construct heatmap 1
heatmap.2(plot_data,
  dendrogram = "none",
  Rowv = NA, 
  scale = "column",
  keysize = 0.7, 
  density.info = "none",
  col = hcl.colors(256), 
  margins = c(10, 20),
  colsep = c(1:7), rowsep = (1:50), sepwidth = c(0.05, 0.05),
  sepcolor = "white", trace = "none"
)

```


Finished multivariate ICA

